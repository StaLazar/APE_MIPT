#pragma once

#include <stdio.h>
#include <stdint.h>
#include <stdbool.h>

/**
 * @brief Время записи данных с датчика температуры.
 */
typedef struct {
    uint16_t year; //!< Год.
    uint8_t month; //!< Месяц.
    uint8_t day; //!< День.
    uint8_t hour; //!< Час.
    uint8_t minute; //!< Минута.
} temp_time;

/**
 * @brief Значение температуры, полученное от датчика.
 */
typedef struct {
    int8_t value; //!< Значение.
    bool isValid; //!< Достоверность.
} temp_record;

/**
 * @brief Данные с датчика температуры.
 */
typedef struct {
    temp_time time; //!< Время записи.
    temp_record record; //!< Значение.
} temp_data;

/**
 * @brief Получить значение среднемесячной температуры.
 * @param records Массив данных с датчика температуры.
 * @param size Размер массива данных с датчика температуры.
 * @param time Структура времени, год и месяц которой определяют
 * область поиска значения среднемесячной температуры.
 * @return Достоверное значение температуры, если в массиве данных есть
 * хотя бы одна запись в указанной временной области, а иначе - недостоверное.
 */
temp_record getAverMonthTemp(const temp_data *records, size_t size, temp_time time);

/**
 * @brief Получить значение минимальной месячной температуры.
 * @param records Массив данных с датчика температуры.
 * @param size Размер массива данных с датчика температуры.
 * @param time Структура времени, год и месяц которой определяют
 * область поиска значения минимальной месячной температуры.
 * @return Достоверное значение температуры, если в массиве данных есть
 * хотя бы одна запись в указанной временной области, а иначе - недостоверное.
 */
temp_record getMinMonthTemp(const temp_data *records, size_t size, temp_time time);

/**
 * @brief Получить значение максимальной месячной температуры.
 * @param records Массив данных с датчика температуры.
 * @param size Размер массива данных с датчика температуры.
 * @param time Структура времени, год и месяц которой определяют
 * область поиска значения максимальной месячной температуры.
 * @return Достоверное значение температуры, если в массиве данных есть
 * хотя бы одна запись в указанной временной области, а иначе - недостоверное.
 */
temp_record getMaxMonthTemp(const temp_data *records, size_t size, temp_time time);

/**
 * @brief Получить значение среднегодовой температуры.
 * @param records Массив данных с датчика температуры.
 * @param size Размер массива данных с датчика температуры.
 * @param time Структура времени, год которой определяет
 * область поиска значения среднегодовой температуры.
 * @return Достоверное значение температуры, если в массиве данных есть
 * хотя бы одна запись в указанной временной области, а иначе - недостоверное.
 */
temp_record getAverAnnualTemp(const temp_data *records, size_t size, temp_time time);

/**
 * @brief Получить значение минимальной годовой температуры.
 * @param records Массив данных с датчика температуры.
 * @param size Размер массива данных с датчика температуры.
 * @param time Структура времени, год которой определяет
 * область поиска значения минимальной годовой температуры.
 * @return Достоверное значение температуры, если в массиве данных есть
 * хотя бы одна запись в указанной временной области, а иначе - недостоверное.
 */
temp_record getMinAnnualTemp(const temp_data *records, size_t size, temp_time time);

/**
 * @brief Получить значение максимальной годовой температуры.
 * @param records Массив данных с датчика температуры.
 * @param size Размер массива данных с датчика температуры.
 * @param time Структура времени, год которой определяет
 * область поиска значения максимальной годовой температуры.
 * @return Достоверное значение максимальной годовой температуры, если в массиве данных
 * есть хотя бы одна запись в указанной временной области, а иначе - недостоверное.
 */
temp_record getMaxAnnualTemp(const temp_data *records, size_t size, temp_time time);
